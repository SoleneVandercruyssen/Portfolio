*, ::before, ::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    height: 400vh;
}

header {
    /* En position fixed, l'élément sort du flow de la page, sa largeur devient égale à son contenu, et l'élément se déplace avec le scrolling */
    position: fixed;
    width: 100%;
    background-color: #757474;
    color: #75bba9;
    padding: 1rem;
    text-align: center;
    /* z-index ne fonctionne que sur un élément positionné.
    Il joue sur la profondeur de l'élément.
    Tout élément est par défaut à 0, un nombre positif, fera passer l'élément devant, un négatif, derrière. */
    z-index: 1;
}

nav, main {
    margin-top: 50px;
    padding: 2rem;
    display: inline-block;
    height: 100%;
}

nav{
    width: 200px;
    /* linear-gradient prend au moins deux couleurs, jusqu'à autant qu'on le suhaite, et crée une image qui est dégradé de ces couleurs.
    On peut ajouter un premier paramètre qui est soit un mot clef (to bottom, to left...) soit une valeur en degré (45deg...) pour tourner le dégradé. 
    On peut suiver la couleur d'un pourcentage pour indiquer à partir de quand le dégradé doit commencer.*/
    background-image: linear-gradient(90deg, #6f65f6 66%, #b5fd85 33%, #ec2323 66%, #f6f6f6 33%);
}

nav ul{
    /* La position sticky, garde l'élément dans le flux de la page, jusqu'à ce que la position indiqué soit atteinte (ici top: 70px).
    Une fois la position atteinte, l'élément suivra le scrolling, tant qu'il peut rester dans son parent (ici la nav). */
    position: sticky;
    /* Les propriétés top, right,  left, bottom, ne fonctionnent que sur un élément positionné.
    Elles agissent différemment selon la position.
    Il existe une propriété résumé de ces 4 là, nommet "inset" */
    top: 70px;
    list-style-type: none;
}

main{
    /* La fonction calc permet de faire des calculs rn CSS.
    ! Chaque élément doit être séparé d'un espace. */
    width: calc(100% - 205px);
    /* radial gradient fonctionnera comme linear graident si ce n'est qu'il va créer une forme circulaire, par défaut la forme sera plutôt ovale, mais on peut lui préciser qu'on veut un cercle, et à quel position ce cercle doit commencer. */
    background-image: radial-gradient(circle at 100%, #5cc74e, #f11313 20%, #1f63e0 70%, #f6f6f6 100%);
    /* La position relative, permet de déplacer un élément par rapport à sa position d'origine. 
    Son emplacement d'origine est toujours gardé dans le flux de la page, donc aucun élément ne viendra le remplacer.*/
    position: relative;
    top: 100px;
}

main p:last-child{
    min-height: 300px;
    /*  */
    background-image: conic-gradient(#f6f6f6, #f11313, #5cc74e, #1f63e0, #f6f6f6);
}

button{
    /* 
    L'élément est sortie du flux de la page.
    Il prend la taille de son contenu.
    Si un positionnement (top, left...) lui est précisé.
    Il vient se postionner, par rapport à son parent positionné le plus proche. */
    position: absolute;
    /* right: 0;
    top: 0; */
    top: 50%;
    left: 50%;
    /*  */
    /* transform: translate(-50%, -50%) rotate(45deg); */
    translate: -50% -50%;
    rotate: 45deg;
}

img{
    width: 200px;
    /* float sort l'élément de son flux habituel, pour le replacer ailleurs dans le flux de la page.
    Il n'est pas possible d'être précis, on indique généralerment "right" or "left". */
    float: left;
    border-radius: 100%;
    /* Permet que le texte s'adapte à la forme de l'élément. */
    shape-outside: margin-box;
    margin: 10px;
}